# Generated by Django 2.0.1 on 2018-03-12 01:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numOf4', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='4')),
                ('numOf3', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='3')),
                ('numOf2', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='2')),
                ('numOf1', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='1')),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria', models.CharField(max_length=1000)),
                ('expectation4', models.TextField(max_length=1000)),
                ('expectation3', models.TextField(max_length=1000)),
                ('expectation2', models.TextField(max_length=1000)),
                ('expectation1', models.TextField(max_length=1000)),
                ('time_year', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=1)),
                ('time_semester', models.CharField(choices=[('W', 'Winter'), ('A', 'Autumn')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('current_flag', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('teachers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.TextField(max_length=1000)),
                ('current_flag', models.BooleanField(default=True)),
                ('assessed', models.ManyToManyField(blank=True, through='ga.AssessmentMethod', to='ga.Course')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ga.Attribute')),
                ('introduced', models.ManyToManyField(blank=True, related_name='introduces', to='ga.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('current_flag', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SemesterLU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(default=2018, max_length=4)),
                ('term', models.CharField(choices=[('W', 'Winter'), ('A', 'Autumn')], max_length=1)),
            ],
            options={
                'get_latest_by': ['year', '-term'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='semesterlu',
            unique_together={('year', 'term')},
        ),
        migrations.AddField(
            model_name='indicator',
            name='programs',
            field=models.ManyToManyField(to='ga.Program'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='taught',
            field=models.ManyToManyField(blank=True, related_name='taught', to='ga.Course'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='used',
            field=models.ManyToManyField(blank=True, related_name='used', to='ga.Course'),
        ),
        migrations.AddField(
            model_name='assessmentmethod',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ga.Course'),
        ),
        migrations.AddField(
            model_name='assessmentmethod',
            name='indicator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ga.Indicator'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='assessmentMethod',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ga.AssessmentMethod'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ga.Program'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ga.SemesterLU'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='assessment',
            unique_together={('semester', 'teacher', 'assessmentMethod', 'program')},
        ),
    ]
